{
  "openapi": "3.0.0",
  "info": {
    "title": "My API",
    "version": "1.0.0"
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    }
  },
  "tags": [
    {
      "name": "Auth",
      "description": ""
    },
    {
      "name": "Place",
      "description": ""
    },
    {
      "name": "Review",
      "description": ""
    },
    {
      "name": "Trip"
    }
  ],
  "paths": {
    "/place/information": {
      "get": {
        "summary": "Get information about a place",
        "tags": ["Place"],
        "parameters": [
          {
            "name": "placeId",
            "in": "query",
            "description": "ID of the place ex P08000001",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": " 4 type SHOP RESTAURANT ACCOMMODATION ATTRACTION ",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "forecastDate",
            "in": "query",
            "description": "Optional forecast date",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "forecastDuration",
            "in": "query",
            "description": "Optional forecast duration",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },

    "/place/checkIn": {
      "post": {
        "tags": ["Place"],
        "summary": "CheckIn at a place",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "latitude": {
                    "type": "number"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "placeId": {
                    "type": "string"
                  }
                },
                "required": ["latitude", "longitude", "placeId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful check-in",
            "content": {
              "application/json": {
                "example": {
                  "message": "Success checkIn"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "error": "No place found for placeId: {placeId} or The distance (distance km) exceeds the allowed threshold."
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "example": {
                  "error": "Already checked in at this place"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "error": "{error message}"
                }
              }
            }
          }
        }
      }
    },
    "place/bookmark": {
      "post": {
        "tags": ["Place"],
        "summary": "Bookmark or unbookmark a place",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "placeId": {
                    "type": "string"
                  }
                },
                "required": ["placeId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "message": "Bookmark or unbookmark success"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "error": "No place found for placeId: {placeId}"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Error message"
                }
              }
            }
          }
        }
      }
    },

    "/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": ["username", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "example": {
                  "message": "Login success",
                  "token": "{JWT token}"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "No user in database"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Wrong password"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "error": "Something went wrong {error message}"
                }
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": ["username", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful registration",
            "content": {
              "application/json": {
                "example": {
                  "message": "Create new user success"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "User already exists"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "error": "Something went wrong {error message}"
                }
              }
            }
          }
        }
      }
    },
    "/authCheck": {
      "get": {
        "tags": ["Auth"],
        "summary": "Check authentication status",
        "responses": {
          "204": {
            "description": "Auth",
            "content": {}
          },
          "401": {
            "description": "Error: Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/review": {
      "post": {
        "tags": ["Review"],
        "summary": "Create a new review",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "rating": {
                    "type": "number"
                  },
                  "content": {
                    "type": "string"
                  },
                  "placeId": {
                    "type": "string"
                  },
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                },
                "required": ["rating", "content", "placeId", "files"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "message": "Success review"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "error": "rating, content, placeId, and files are required in the request body."
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "error": "No place found for placeId: {placeId}"
                }
              }
            }
          }
        }
      }
    },
    "/review/delete": {
      "delete": {
        "tags": ["Review"],
        "summary": "Delete a review",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reviewId": {
                    "type": "string"
                  }
                },
                "required": ["reviewId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "message": "Delete review success"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "error": "Permission denied"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "error": "No review found for reviewId: {reviewId}"
                }
              }
            }
          }
        }
      }
    },
    "/review/like": {
      "post": {
        "tags": ["Review"],
        "summary": "Like or unlike a review",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reviewId": {
                    "type": "string"
                  }
                },
                "required": ["reviewId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unlike success or like success"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "error": "No review found for reviewId: {reviewId}"
                }
              }
            }
          }
        }
      }
    },
    "/trip": {
      "post": {
        "summary": "Create a new trip",
        "tags": ["Trip"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "required": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": {
                  "tripId": "generated_trip_id"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Error message"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a trip",
        "tags": ["Trip"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tripId": {
                    "type": "string",
                    "description": "The ID of the trip to be deleted"
                  }
                },
                "required": ["tripId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": {
                  "message": "success"
                }
              }
            }
          },
          "404": {
            "description": "Trip not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "Can't delete trip"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/trip/verifyInvitation": {
      "get": {
        "summary": "Verify invitation",
        "tags": ["Trip"],
        "parameters": [
          {
            "name": "inviteLink",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Invitation link for the trip"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": {
                  "tripId": "generated_trip_id",
                  "currentStage": "current_stage"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Error message"
                }
              }
            }
          },
          "404": {
            "description": "Trip not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "No trip found for inviteLink"
                }
              }
            }
          }
        }
      }
    },
    "/trip/member": {
      "delete": {
        "summary": "Remove member from trip",
        "tags": ["Trip"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "friendId": {
                    "type": "string",
                    "description": "ID of the member to be removed"
                  },
                  "tripId": {
                    "type": "string",
                    "description": "ID of the trip"
                  }
                },
                "required": ["friendId", "tripId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": {
                  "message": "delete success"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Error message"
                }
              }
            }
          },
          "403": {
            "description": "Permission denied",
            "content": {
              "application/json": {
                "example": {
                  "error": "Permission denied"
                }
              }
            }
          },
          "404": {
            "description": "Member not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "No friendId found for tripId"
                }
              }
            }
          }
        }
      }
    },
    "/trip/dateMember": {
      "post": {
        "summary": "Update member date in trip",
        "tags": ["Trip"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tripId": {
                    "type": "string",
                    "description": "ID of the trip"
                  },
                  "date": {
                    "type": "string",
                    "description": "Date to be updated for the member"
                  }
                },
                "required": ["tripId", "date"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": {
                  "message": "success"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Error message"
                }
              }
            }
          },
          "404": {
            "description": "Trip not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "No trip found for tripId"
                }
              }
            }
          }
        }
      }
    },
    "/trip/date": {
      "post": {
        "summary": "Update date in trip and Update state to placeSelect",
        "tags": ["Trip"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tripId": {
                    "type": "string",
                    "description": "ID of the trip"
                  },
                  "start": {
                    "type": "string",
                    "description": "Start date of the trip"
                  },
                  "end": {
                    "type": "string",
                    "description": "End date of the trip"
                  }
                },
                "required": ["tripId", "start", "end"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": {
                  "message": "success"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Error message"
                }
              }
            }
          },
          "403": {
            "description": "Permission denied",
            "content": {
              "application/json": {
                "example": {
                  "error": "Permission denied"
                }
              }
            }
          },
          "404": {
            "description": "Trip not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "No trip found for tripId"
                }
              }
            }
          }
        }
      }
    },

    "/trip/information": {
      "get": {
        "summary": "Get information about the trip",
        "tags": ["Trip"],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["member", "allPlace", "allPlaceForEachDate", "all"]
            },
            "description": "Type of information to be retrieved"
          },
          {
            "name": "tripId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the trip"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Error message"
                }
              }
            }
          },
          "403": {
            "description": "Permission denied",
            "content": {
              "application/json": {
                "example": {
                  "error": "Permission denied"
                }
              }
            }
          },
          "404": {
            "description": "Trip not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "No trip found for tripId"
                }
              }
            }
          }
        }
      }
    }
  }
}
